#       Title: Course project for "Getting and Cleaning Data" Module
#
#       Human Activity Recognition using Smart Phones data set is given.
#
#       This R script does the following:
#       1. Merges the training and the test sets to create one data set.
#       2. Extracts only the measurements on the mean and standard deviation
#          for each measurement.
#       3. Uses descriptive activity names to name the activities in the data set
#       4. Appropriately labels the data set with descriptive variable names
#       5. From the data set in step 4, creates a second, independent tidy
#          data set with the average of each variable for each activity
#          and each subject.
#
#
#
#       Part 1:
#               Setup the required environment:
#               We will be using the data.table & dplyr R libraries
#                       for aggregating variables.
#               Setup the local working directory
#               Load the data files provided
#
library(data.table)
library(dplyr)
wd<-"C:/Users/lnkkota.Home-PC/datasciencecoursera/GettingandCleaningData/Assignment/UCI_HAR_Dataset"
if (!is.null(wd)) setwd(wd)
activity_labels <- read.table("activity_labels.txt", sep="")
features <- read.table("features.txt", sep="")
subject_train <- read.table("train/subject_train.txt", sep="")
subject_test <- read.table("test/subject_test.txt", sep="")
x_train <- read.table("train/X_train.txt", sep="")
x_test <- read.table("test/X_test.txt", sep="")
y_train <- read.table("train/y_train.txt", sep="")
y_test <- read.table("test/y_test.txt", sep="")
#
#       Tidy the column names
#
colnames(activity_labels) <- c("V1","Activity")
colnames(x_train) <- features[,2]
colnames(x_test) <- features[,2]
colnames(subject_train) <- "Subject"
colnames(subject_test) <- "Subject"
colnames(y_train) <- "Activity"
colnames(y_test) <- "Activity"
#
#       Bind the data columnwise for training and test data sets
#
#       Training Data Set
train_dataset <- cbind(y_train, subject_train, x_train)
#       Test Data Set
test_dataset <- cbind(y_test, subject_test, x_test)
#
#       Merge the training and test data sets using a row bind
#
raw_dataset <- rbind(train_dataset, test_dataset)
#
#       Part 2: Extract the measurements on the mean & standard deviation
#                for each measurement
#
columns4Extraction <- grep(".*Mean.*|.*Std.*|Subject|Activity",
names(raw_dataset), ignore.case=TRUE)
extractedDataset <- raw_dataset[,columns4Extraction]
dim(extractedDataset)
#
#       Part 3: Modify the activity field to descriptive names
#
extractedDataset$Activity <- as.character(extractedDataset$Activity)
for(i in 1:nrow(activity_labels)){
extractedDataset$Activity[extractedDataset$Activity == i] <-
as.character(activity_labels[i,2])
}
# Factor the activity & subject variables
extractedDataset$Activity <- as.factor(extractedDataset$Activity)
extractedDataset$Subject <- as.factor(extractedDataset$Subject)
#
#       Part 4: Appropriately label the data set with descriptive
#               variable names
#
#       List the variable names in the dataset
names(extractedDataset)
#
#       The following text in the variable names can be qualified with
#       descriptive variable names.
#
#       t - can be replaced with Time
#       f - can be replaced with Frequency
#       Acc - can be replaced with Accelerometer
#       Gyro - can be replaced with Gyroscope
#       Mag - can be replaced with Magnitude
#       BodyBody - can be replaced with Body
#
names(extractedDataset) <- gsub("^t", "Time", names(extractedDataset))
names(extractedDataset) <- gsub("^f", "Frequency", names(extractedDataset))
names(extractedDataset) <- gsub("Acc", "Accelerometer", names(extractedDataset))
names(extractedDataset) <- gsub("Gyro", "Gyroscope", names(extractedDataset))
names(extractedDataset) <- gsub("Mag", "Magnitude", names(extractedDataset))
names(extractedDataset) <- gsub("BodyBody", "Body", names(extractedDataset))
#
#       The revised variable names in a descriptive form is below
#
names(extractedDataset)
#
#       Part 5: From the data set in step 4, create a second,
#               independent tidy data set with the average of
#               each variable for each activity and each subject
#
#
#
extractedDataset <- data.table(extractedDataset)
tidyDataset <- aggregate(. ~ Subject + Activity, extractedDataset, mean)
tidyDataset <- tidyDataset[order(tidyDataset$Subject,tidyDataset$Activity),]
write.table(tidyDataset, file = "Tidy.txt", row.names=FALSE)
